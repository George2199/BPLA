from models import db, Role, Theme, Task, Course
import json

IMG_PATH = "/data/imgs/"
VIDEO_PATH = "/data/videos/"
CONSPECT_PATH = "/data/conspects/"

def clear_tables():
    print("‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü...")

    # –£–¥–∞–ª—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–∏—Å–∏–º—ã–µ (Task ‚Üí Theme ‚Üí Course)
    Task.query.delete()
    Theme.query.delete()
    Course.query.delete()
    Role.query.delete()

    db.session.commit()
    print("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã.")

def seed_roles():
    if Role.query.first():
        print("üîç Roles already seeded. Skipping.")
        return

    roles = [
        Role(role_name="Admin", login="admin", password="admin"),
        Role(role_name="User", login="user", password="user"),
        Role(role_name="Operator", login="op", password="op"),
    ]

    db.session.bulk_save_objects(roles)
    db.session.commit()
    print("‚úÖ Roles table seeded successfully.")

def seed_courses():
    if Course.query.first():
        print("üîç Courses already seeded.")
        return
    
    python_course = Course(
        title="Python. –í–≤–µ–¥–µ–Ω–∏–µ",
        image_url=IMG_PATH + "Python.png",
        progress=0.3
    )

    cosmos_course = Course(
        title="–ê—ç—Ä–æ–∫–æ—Å–º–æ—Å",
        image_url=IMG_PATH + "Cosmos.png",
        progress=0.0
    )

    drone_course = Course(
        title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ë–ü–õ–ê",
        image_url=IMG_PATH + "Drone.png",
        progress=0.7
    )

    python_course.themes = [
        Theme(title="–¢–µ–º–∞ 1: –û—Å–Ω–æ–≤—ã —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞", tasks=[
            Task(title="–í–∏–¥–µ–æ: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ", type="video", content=VIDEO_PATH + "perem.mp4"),
            Task(title="–ö–æ–Ω—Å–ø–µ–∫—Ç: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ", type="conspect", content=CONSPECT_PATH + "conspect1.md"),
        ]),
        Theme(title="–¢–µ–º–∞ 2: –£—Å–ª–æ–≤–∏—è", tasks=[
            Task(title="–í–∏–¥–µ–æ: if/else", type="video", content=VIDEO_PATH + "ifelse.mp4"),
            Task(
                title="–¢–µ—Å—Ç 1: –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∏ –ø–æ–ª—ë—Ç",
                type="test",
                content=json.dumps({
                    "questions": [
                        {
                            "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –ë–í–°?",
                            "options": [
                                "–ë–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–µ –≤–æ–∑–¥—É—à–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ",
                                "–ë–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–µ –≤–æ–¥–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ",
                                "–ë–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–µ –≤–µ—Ç—Ä—è–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ",
                                "–ë–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–µ –≤–∫—É—Å–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ"
                            ],
                            "correct_answers": [0]
                        },
                        {
                            "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –ë–í–°1?",
                            "options": [
                                "–ë–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–µ –≤–æ–∑–¥—É—à–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ",
                                "–ë–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–µ –≤–æ–¥–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ",
                                "–ë–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–µ –≤–µ—Ç—Ä—è–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ",
                                "–ë–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–µ –≤–∫—É—Å–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ"
                            ],
                            "correct_answers": [0]
                        },
                        {
                            "question": "–ì–¥–µ –Ω–µ–ª—å–∑—è –∑–∞–ø—É—Å–∫–∞—Ç—å –ë–í–°?",
                            "options": [
                                "–ù–∞–¥ –≤–æ–µ–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏",
                                "–í–±–ª–∏–∑–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤",
                                "–í –∑–∞–∫—Ä—ã—Ç—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏—è—Ö",
                                "–ù–∞ –Æ–ø–∏—Ç–µ—Ä–µ"
                            ],
                            "correct_answers": [0, 2]
                        }
                    ]
                })
            ),
            Task(
                title="–ë–ª–æ–∫–∏ –∫–æ–¥–∞ 1: Hello, World!",
                type="block",
                content=json.dumps({
                    "description": "–°–æ–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å—Ç—Ä–æ–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ 'Hello, World!'",

                    "test_files": ["test_block1.py", "test_block1_extra.py"],

                    "blocks": [
                        { "content": "def main():", "type": "code" },
                        { "content": "print('Hello, World!')", "type": "code" },
                        { "content": "main()", "type": "code" },
                        {
                            "type": "container",
                            "label": "for i in range(5):",
                            "children": [
                                { "content": "    print(i)", "type": "code" }
                            ]
                        },
                        { "content": "print('Goodbye, World!')", "type": "code" }
                    ]
                })
            ),
        ])
    ]

    db.session.add_all([python_course, cosmos_course, drone_course])
    db.session.commit()
    print("‚úÖ Courses, themes, and tasks seeded.")
